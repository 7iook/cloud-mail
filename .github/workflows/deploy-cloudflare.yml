name: 🚀 Deploy cloud-mail to Cloudflare Workers

on:
  push:
    branches: [ main ]
    paths:
      - "mail-worker/**"
      - "mail-vue/**"
  workflow_dispatch:

jobs:
  Deploy-cloud-mail:
    name: 🏗️ Build and Deploy
    runs-on: ubuntu-latest

    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      # Application secrets (set via Wrangler secret put in production)
      DOMAIN: ${{ secrets.DOMAIN }}
      ADMIN: ${{ secrets.ADMIN }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      INIT_URL: ${{ secrets.INIT_URL }}
    
    outputs:
      deployment_skipped: ${{ steps.deploy.outputs.deployment_skipped }}

    steps:
      - name: ➡️ Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "./mail-worker/pnpm-lock.yaml"

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./mail-worker

      - name: 📡 Disable wrangler telemetry
        working-directory: ./mail-worker
        run: npx wrangler telemetry disable

      - name: 🛠️ Deploy to Cloudflare Workers (Production)
        id: deploy
        working-directory: ./mail-worker
        run: |
          echo "deployment_skipped=false" >> $GITHUB_OUTPUT
          echo "🚀 Deploying to Cloudflare Workers (production environment)..."

          # Deploy using production environment configuration from wrangler.toml
          # D1 and KV bindings are defined in [env.production] section
          npx wrangler deploy --env production | grep -v "https://.*\.workers\.dev" || true
          echo "✅ Deployment completed."

      - name: 🔐 Set Application Secrets (if needed)
        if: ${{ steps.deploy.outputs.deployment_skipped == 'false' }}
        working-directory: ./mail-worker
        run: |
          # Note: Secrets should be set once and persist across deployments
          # Uncomment below if you need to update secrets during deployment
          # npx wrangler secret put DOMAIN --env production <<< "${{ secrets.DOMAIN }}"
          # npx wrangler secret put ADMIN --env production <<< "${{ secrets.ADMIN }}"
          # npx wrangler secret put JWT_SECRET --env production <<< "${{ secrets.JWT_SECRET }}"
          echo "✅ Secrets configuration verified."

      - name: 🗄️ Initialize Database (if INIT_URL is set)
        if: ${{ steps.deploy.outputs.deployment_skipped == 'false' }}
        run: |
          if [ -z "$INIT_URL" ]; then
            echo "✅ Deployment successful. INIT_URL not set, skipping initialization."
            exit 0
          fi
          
          echo "⏳ Waiting 15 秒之前 before checking initialization status..."
          sleep 15
          
          HTTP_CODE=$(curl -s -w "%{http_code}" -o response.txt "$INIT_URL")
          RESPONSE_BODY=$(cat response.txt)
          
          echo "🔎 Checking response... (Status: $HTTP_CODE)"

          if [ "$HTTP_CODE" = "200" ] && [ "$RESPONSE_BODY" = "初始化成功" ]; then
            echo "🎉✅ Fresh initialization successful!"
          elif [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Database is already initialized or in a stable state. Response: $RESPONSE_BODY"
          else
            echo "⚠️ Database initialization check failed with HTTP status: $HTTP_CODE. Please check your worker logs."
          fi

      - name: 📣 Notify Final Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            if [ "${{ steps.deploy.outputs.deployment_skipped }}" == "true" ]; then
              echo "🟡 Deployment was skipped due to missing configuration."
            else
              echo "🎉🎉🎉 Hooray! Deployment completed successfully! 🎉🎉🎉"
            fi
          else
            echo "❌❌❌ Oh no! The deployment failed. Please check the logs above for errors. ❌❌❌"
          fi

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: '3'
          keep_minimum_runs: '0'
